{"version":3,"file":"static/js/567.b16fbe3b.chunk.js","mappings":"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","sources":["webpack://itstar-test-app/./src/components/TransactionForm/transaction-form.module.css?f61b","components/TransactionForm/initialState.js","shared/utils/calculateTotal.js","shared/utils/calculateBalance.js","components/TransactionForm/TransactionForm.jsx","components/WalletList/WalletList.jsx","webpack://itstar-test-app/./src/components/Palindrome/palindrome.module.css?08f5","components/Palindrome/Palindrome.jsx","webpack://itstar-test-app/./src/pages/WalletPage/wallet-page.module.css?e3b2","pages/WalletPage/WalletPage.jsx","redux/wallet/wallet-selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"transaction-form_form__ZBze-\",\"boxForm\":\"transaction-form_boxForm__zlpJi\",\"boxInput\":\"transaction-form_boxInput__KaJ92\",\"textField\":\"transaction-form_textField__Ua7Mt\",\"buttonAdd\":\"transaction-form_buttonAdd__V1C5x\"};","const inititalState = {\n  name: \"\",\n  total: \"\",\n  type: \"salary\",\n};\n\nexport default inititalState;","const calculateTotal = (transactions) => {\n  const total = transactions.reduce((accumulator, transaction) => {\n    return accumulator + Number(transaction.total);\n  }, 0);\n  return total;\n};\n\nexport default calculateTotal;","const calculateBalance = (salary, expense) => {\n    return salary - expense;\n  };\n\nexport default calculateBalance;","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport styles from \"./transaction-form.module.css\";\nimport initialState from \"./initialState\";\n\nimport { addTransactions } from \"../../redux/wallet/wallet-slice\";\nimport calculateTotal from \"../../shared/utils/calculateTotal\";\nimport calculateBalance from \"../../shared/utils/calculateBalance\";\nimport { selectExpenseTransactions, selectSalaryTransactions } from \"../../redux/wallet/wallet-selectors\";\n\nimport swal from \"sweetalert\";\n\nconst TransactionForm = () => {\n  const [state, setState] = useState({ ...initialState });\n\n  const dispatch = useDispatch();\n\n  const salaryTransactions = useSelector(selectSalaryTransactions);\n  const expenseTransactions = useSelector(selectExpenseTransactions);\n\n  const checkBalance = (total, type) => {\n    const salary = calculateTotal(salaryTransactions);\n    const expense = calculateTotal(expenseTransactions);\n    const totalBalance = calculateBalance(salary, expense);\n    \n    if (type === \"expense\" && totalBalance < Number(total)) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleAddContact = ({ name, total, type }) => {\n    if (checkBalance(total, type)) {\n      swal(\"Insufficient funds\", \"Go work\");\n      return;\n    }\n    dispatch(addTransactions({ name, total, type }));\n  };\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState((prevState) => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    handleAddContact({ ...state });\n    setState({ ...initialState });\n  };\n\n  const { name, total, type } = state;\n\n  return (\n    <>\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <div>\n        </div>\n        <div className={styles.boxInput}>\n          <label>Transaction Name</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            className={styles.textField}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces.\"\n            required\n          />\n        </div>\n        <div className={styles.boxInput}>\n          <label>Total</label>\n          <input\n            type=\"number\"\n            name=\"total\"\n            value={total}\n            className={styles.textField}\n            onChange={handleChange}\n            min=\"1\"\n            max=\"100000\"\n            title=\"Тo more than 100,000\"\n            required\n          />\n        </div>\n        <div className={styles.boxInput}>\n          <label>Type</label>\n          <select value={type} name=\"type\" onChange={handleChange}>\n            <option className={styles.textField} value=\"salary\" selected >Salary</option>\n            <option className={styles.textField} value=\"expense\">Expense</option>\n          </select>\n        </div>\n\n        <button className={styles.buttonAdd}>Add transaction</button>\n      </form>\n    </>\n  );\n};\n\nexport default TransactionForm;\n","import { useSelector } from \"react-redux\";\n\nimport calculateTotal from \"../../shared/utils/calculateTotal\";\nimport calculateBalance from \"../../shared/utils/calculateBalance\";\n\nimport { selectSalaryTransactions, selectExpenseTransactions } from \"../../redux/wallet/wallet-selectors\";\n\nconst TransactionList = () => {\n  const salaryTransactions = useSelector(selectSalaryTransactions);\n  const expenseTransactions = useSelector(selectExpenseTransactions);\n\n  const salary = calculateTotal(salaryTransactions);\n  const expense = calculateTotal(expenseTransactions);\n  const totalBalance = calculateBalance(salary, expense);\n\n  return (\n    <div>\n      <p>Salary: {salary}$</p>\n      <p>Expense: {expense}$</p>\n      <p>Balance: {totalBalance}$</p>\n    </div>\n  );\n};\n\nexport default TransactionList;\n","// extracted by mini-css-extract-plugin\nexport default {\"textField\":\"palindrome_textField__ZlPix\",\"boxInput\":\"palindrome_boxInput__k41iX\",\"buttonCheck\":\"palindrome_buttonCheck__lfikG\"};","import { useState } from \"react\";\nimport swal from \"sweetalert\";\n\nimport styles from \"./palindrome.module.css\";\n\nconst Palindrome = () => {\n  const [state, setState] = useState({\n    text: \"\",\n  });\n\n  const checkPalindrome = (text) => {\n    const normalizedText = text\n      .replace(/[^a-zA-Z0-9а-яА-ЯіїєґїҐЇЄ]/g, \"\")\n      .toUpperCase();\n    const revers = normalizedText.split(\"\").reverse().join(\"\");\n    return normalizedText === revers;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const { text } = state;\n    if (checkPalindrome(text)) {\n      return swal(\"true\");\n    }\n    swal(\"false\");\n    setState({\n      text: \"\",\n    });\n  };\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState((prevState) => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const { text } = state;\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <div className={styles.boxInput}>\n          <label>Palindrome</label>\n          <input\n            className={styles.textField}\n            name=\"text\"\n            value={text}\n            onChange={handleChange}\n            required\n            type=\"text\"\n          />\n          <button className={styles.buttonCheck}>Check</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Palindrome;\n","// extracted by mini-css-extract-plugin\nexport default {\"boxWallet\":\"wallet-page_boxWallet__fAjfs\"};","import TransactionForm from \"../../components/TransactionForm/TransactionForm\";\nimport WalletList from \"../../components/WalletList/WalletList\";\nimport Palindrome from \"../../components/Palindrome/Palindrome\";\n\nimport styles from \"./wallet-page.module.css\";\n\nconst WalletPage = () => {\n  return (\n    <div className={styles.boxWallet}>\n      <div>\n        <h3>Add transaction</h3>\n        <TransactionForm />\n      </div>\n      <div>\n        <h3>Report</h3>\n        <WalletList />\n      </div>\n      <div>\n        <h3>Palindrome</h3>\n        <Palindrome/>\n      </div>\n    </div>\n  );\n};\n\nexport default WalletPage;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectWallet = ({ transactions }) => transactions;\nexport const selectSalaryTransactions = createSelector(\n  [selectWallet],\n  (transactions) => {\n    return transactions.filter((item) => item.type === \"salary\");\n  }\n);\n\nexport const selectExpenseTransactions = createSelector(\n  [selectWallet],\n  (transactions) => {\n    return transactions.filter((item) => item.type === \"expense\");\n  }\n);\n\nexport const getSortTransactions = createSelector(\n  [selectWallet],\n  (transactions) => {\n    const newArray = [...transactions];\n    newArray.sort(function (firstTr, secondTr) {\n      return firstTr.time.getTime() - secondTr.time.getTime();\n    });\n    console.log(newArray);\n  }\n);\n"],"names":["name","total","type","transactions","reduce","accumulator","transaction","Number","salary","expense","_useState","useState","_objectSpread","initialState","_useState2","_slicedToArray","state","setState","dispatch","useDispatch","salaryTransactions","useSelector","selectSalaryTransactions","expenseTransactions","selectExpenseTransactions","handleAddContact","_ref","calculateTotal","totalBalance","calculateBalance","checkBalance","addTransactions","swal","handleChange","_ref2","target","value","prevState","_defineProperty","_jsx","_Fragment","children","_jsxs","className","styles","onSubmit","e","preventDefault","onChange","pattern","title","required","min","max","selected","text","normalizedText","replace","toUpperCase","revers","split","reverse","join","checkPalindrome","TransactionForm","WalletList","Palindrome","selectWallet","createSelector","filter","item","newArray","_toConsumableArray","sort","firstTr","secondTr","time","getTime","console","log"],"sourceRoot":""}
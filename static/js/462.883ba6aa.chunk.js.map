{"version":3,"file":"static/js/462.883ba6aa.chunk.js","mappings":"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","sources":["webpack://itstar-test-app/./src/components/TransactionList/TransactionItem/transaction-item.module.css?8e6f","components/TransactionList/TransactionItem/TransactionItem.jsx","webpack://itstar-test-app/./src/components/TransactionList/transaction-list.module.css?3a8e","components/TransactionList/TransactionList.jsx","pages/TransactionHistoryPage/TransactionHistoryPage.jsx","redux/wallet/wallet-selectors.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"buttonRemove\":\"transaction-item_buttonRemove__mHlI5\",\"itemTransactionSalary\":\"transaction-item_itemTransactionSalary__deH1G\",\"itemTransactionExpanse\":\"transaction-item_itemTransactionExpanse__c3f-d\"};","import { useDispatch } from \"react-redux\";\n\nimport PropTypes from \"prop-types\";\n\nimport { removeTransaction } from \"../../../redux/wallet/wallet-slice\";\n\nimport styles from \"./transaction-item.module.css\";\n\nconst TransactionItem = ({ id, name, total, time, type }) => {\n  const dispatch = useDispatch();\n\n  const itemTransaction = type === \"salary\" ? styles.itemTransactionSalary : styles.itemTransactionExpanse;\n\n  const handleRemoveTransaction = (id) => {\n    dispatch(removeTransaction(id));\n  };\n\n  return (\n    <li className={itemTransaction}>\n      <h3>{type.toLowerCase()}</h3>\n      <p>{name}: {total} $</p>\n      <p>{time}</p>\n      \n      <button\n        className={styles.buttonRemove}\n        onClick={() => handleRemoveTransaction(id)}\n        type=\"button\"\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default TransactionItem;\n\n\nTransactionItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  total: PropTypes.string.isRequired,\n  time: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"transactionList\":\"transaction-list_transactionList__3pvAa\"};","import { useSelector } from \"react-redux\";\n\nimport { selectWallet } from \"../../redux/wallet/wallet-selectors\";\n\nimport TransactionItem from \"./TransactionItem/TransactionItem\";\n\nimport styles from \"./transaction-list.module.css\"\n\nconst TransactionList = () => {\n  const wallet = useSelector(selectWallet);\n\n  const newArrayWallet = [...wallet];\n  newArrayWallet.sort(function (firstTr, secondTr) {\n    return new Date(secondTr.time).getTime() - new Date(firstTr.time).getTime();\n  });\n\n  const elements = newArrayWallet.map((item) => (\n    <TransactionItem key={item.id} {...item} />\n  ));\n\n  return <ul className={styles.transactionList}>{elements}</ul>;\n};\n\nexport default TransactionList;\n","import { useSelector } from \"react-redux\";\n\nimport TransactionList from \"../../components/TransactionList/TransactionList\";\n\nimport { selectWallet } from \"../../redux/wallet/wallet-selectors\";\n\nconst TransactionHistoryPage = () => {\n\n    const transactions = useSelector(selectWallet);\n    const isTransactions = Boolean(transactions.length);\n\n    return (\n        <div>\n            {isTransactions && <TransactionList/>}\n            {!isTransactions && \"Your transactions will be displayed here\"}\n        </div>\n    );\n  };\n  \n  export default TransactionHistoryPage;","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectWallet = ({ transactions }) => transactions;\nexport const selectSalaryTransactions = createSelector(\n  [selectWallet],\n  (transactions) => {\n    return transactions.filter((item) => item.type === \"salary\");\n  }\n);\n\nexport const selectExpenseTransactions = createSelector(\n  [selectWallet],\n  (transactions) => {\n    return transactions.filter((item) => item.type === \"expense\");\n  }\n);\n\nexport const getSortTransactions = createSelector(\n  [selectWallet],\n  (transactions) => {\n    const newArray = [...transactions];\n    newArray.sort(function (firstTr, secondTr) {\n      return firstTr.time.getTime() - secondTr.time.getTime();\n    });\n    console.log(newArray);\n  }\n);\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};"],"names":["_ref","id","name","total","time","type","dispatch","useDispatch","itemTransaction","styles","_jsxs","className","children","_jsx","toLowerCase","onClick","removeTransaction","handleRemoveTransaction","wallet","useSelector","selectWallet","newArrayWallet","_toConsumableArray","sort","firstTr","secondTr","Date","getTime","elements","map","item","TransactionItem","_objectSpread","transactions","isTransactions","Boolean","length","TransactionList","selectSalaryTransactions","createSelector","filter","selectExpenseTransactions","newArray","console","log","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","Array","_key","_len2","funcs","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","Error","_directlyPassedOption2","finalMemoizeOptions","isArray","dependencies","every","dep","dependencyTypes","join","getDependencies","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations"],"sourceRoot":""}